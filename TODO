# TODO

## Must do
- Configure for deployment

## High priority
- Add other subjects' papers (in order of numbers, see [here](https://www.ox.ac.uk/about/facts-and-figures/student-numbers))
  - **Medicine** 
  - **Chemistry**
  - Law
  - Philosophy, Politics and Economics (PPE)
  - History
  - **Engineering Science**
  - *English Language and Literature*
  - Physics
  - **Modern Languages**
  - Mathematics
  - Biology
  - Molecular and Cellular Biochemistry
  - Literae Humaniores
  - Materials Science
  - Mathematics and Computer Science
  - Computer Science
  - Earth Sciences
  - History and Politics
  - Asian and Middle Eastern Studies
  - English and Modern Languages
  - Modern Languages and Linguistics
  - Theology and Religion
  - Psychology, Philosophy and Linguistics (PPL)
  - Music
  - Geography
  - Economics and Management
  - Neuroscience
  - Biomedical Sciences
  - Fine Art
  - History and Modern Languages
  - Philosophy and Theology
  - Human Sciences
  - Mathematics and Statistics
  - Philosophy and Modern Languages
  - Ancient and Modern History
  - Mathematics and Philosophy
  - Classics and English
  - Computer Science and Philosophy
  - European and Middle Eastern Languages
  - Physics and Philosophy
  - Archaeology and Anthropology
  - Classical Archaeology and Ancient History
  - History and Economics
  - History of Art
  - History and English
  - Classics and Modern Languages
  - Mathematical and Theoretical Physics
  - Cell and Systems Biology
  - Classics and Asian and Middle Eastern Studies
  - Religion and Asian and Middle Eastern Studies
  - Arabic

## Medium priority

### Backend
- Set up logging of API calls (`rotating-file-stream` or `winston` with `morgan`)
- Improve consistency of handling paper names & codes & labels when using database, GET requests, and forms

### Frontend
- Check pages for accessibility issues
  - Some form fields are missing labels on the `review` page

### Features
- Show summaries about each tutor-subject combination on the search page, then let people click through to details
  - Include AI summaries
- Ability to edit reviews

## Low priority

### Features
- Add a way to search for joint honours courses all together rather than separate subjects

### Data
- Add support for people to specify what special subject they did
- Complete work on course -> subject -> paper structure
  - When submitting a review, fetch the user's subjects as the options for them to choose from
- Associate tutors with subjects and only suggest relevant ones when submitting a review
- Complete subject data
  - Biology masters
  - Biomedical Sciences
  - Classical Archaeology and Ancient History
    - Should split up the arch and history components for prelims
    - Do finals https://examregs.admin.ox.ac.uk/Regulation?code=hsocaandancihist
  - Chemistry finals & masters
  - Engineering science finals & masters 
  - English - missing special options

### Validation
- For the review submission endpoint, check on the server side that:
  - keys in req.body are in the questions.json file
  - values for each question are of the correct type (and perhaps also a permissible value, e.g. for paperCode)
  - subject is one of the user's subjects 

### Forms
- Consider using `react-hook-form` rather than `formik`

### UI
- Integrate loading wrapper into `review`, `my-reviews`, and `profile` pages
  - The `reinitialize` on the `profile` page form may be unnecessary
- Horizontally centre the account dropdown menu on mobile devices
  - Or just change how the navbar is laid out
- Decide whether to horizontally centre the app or keep it on the left
- Debouncing when typing tutor's name onto search page
- Error messages for `subject` and `paper` are lagged to disappear on review page
  - Also check implementation in profile completion page, seems quite messily-done
- On the search page, if there's an error, the first time it loads the modal shadow 
  doesn't cover the extreme margins (related to the scrollbar hiding).

### Performance
- Implement lazy loading
- Serve images in next-gen formats with appropriate sizing
- Making a GET to `/auth/status` every time the user changes page may be unnecessary
  - The navbar and main content also separately do the call so it's duplicated already

### Code tidiness
- Investigate using React Suspense for loading indicators
- Create a component to display a review card
  - Currently there is duplication on the `search` and `my-reviews` pages
- Consider whether repetition in notifications and error handling can be reduced
- Make form components more consistent, e.g. the check of `isRequired` and subsequent red asterisk display
- Work out whether a config file is useful for the frontend
- Define common interfaces in a shared location (e.g. for the `search` and `review` page when dealing with server data)
- Implement tests
  - For the frontend, possibly `react-testing-library`
  - On the backend, it might be good to ensure that the JSONs being served are in the format defined by frontend interfaces
    - Could use [VSC schemas](https://code.visualstudio.com/docs/languages/json#_json-schemas-and-settings) for this?

### Authentication
- Attempts to access a protected page if unauth sends you to `/auth/login` and then if 
  successful redirects back to where you were trying to go, not just homepage
- Autodetect user college from email address rather than having user choose

### Server
- Configure controllers instead of plain routers